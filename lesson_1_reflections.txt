How did viewing a diff between two versions of a file help you see the bug that was introduced?

Reading through the output and comparing old code and new changed code surfaced the differences. 


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

It can show me the history of changes over time and therefore can save time incase I ever need to revert back.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Manually choosing: - Flexibility and control 
Automatically saved:- Code may not be complete and therefore may not compile

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Git was built for code version tracking, and code can have multiple files that work in conjunction, whereas google is a document management system and docs are usually stand alone.

How can you use the commands git log and git diff to view the history of files?

    Git log, gives the ID's of commits from bottom to top. Using these IDS one can use git diff to get the differences between two commits using git diff ID1 ID2

How might using version control make you more confident to make changes that
could break something?

    I can make changes and always revert back if there is a mistake in the changes. This opens up new doors

Now that you have your workspace set up, what do you want to try using Git for?

I want to use Git for wirting code and tracking versions.

